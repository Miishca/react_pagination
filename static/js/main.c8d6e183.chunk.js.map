{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","page","setPage","paginationList","className","cn","disabled","href","onClick","currentPage","map","number","active","length","items","from","to","numbers","n","push","getNumbers","App","useState","itemsPerPage","setItemsPerPage","pagin","i","Math","ceil","pagination","firstItemOnPage","lastItemOnPage","tile","id","value","onChange","event","target","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,eAEA,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAAmB,IAATL,IAFd,SAKE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAwB,IAATN,EACfO,QAAS,WACM,IAATP,GACFC,GAAQ,SAACO,GAAD,OAAiBA,EAAc,MAP7C,oBAcDN,EAAeO,KAAI,SAACC,GACnB,OACE,oBACEP,UAAWC,IAAG,YAAa,CACzBO,OAAQX,IAASU,IAFrB,SAME,mBACE,UAAQ,WACRP,UAAU,YACVG,KAAK,KACLC,QAAS,WACHP,IAASU,GACXT,EAAQS,IANd,SAUGA,KAZEA,MAiBX,oBACEP,UAAWC,IAAG,YAAa,CACzBC,SAAUL,IAASE,EAAeU,SAFtC,SAKE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,gBAAeN,IAASE,EAAeU,OACvCL,QAAS,WACHP,IAASE,EAAeU,QAC1BX,GAAQ,SAACO,GAAD,OAAiBA,EAAc,MAP7C,wBCzDFK,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IAAIV,KAAI,SAACQ,GAAD,qBAAeA,MAEtCG,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOrB,EAAP,KAAaC,EAAb,KACA,EAAwCoB,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAYMrB,EAVa,WAGjB,IAFA,IAAMsB,EAAQ,GAELC,EAAI,EAAGA,GAAKC,KAAKC,KAAKd,EAAMD,OAASU,GAAeG,GAAK,EAChED,EAAMN,KAAKO,GAGb,OAAOD,EAGcI,GASvB,OACE,sBAAKzB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SAXS,WACX,IAAM0B,EAAkBP,EAAetB,EAAOsB,EAAe,EACvDQ,EAAiBR,EAAetB,EAAO,GAAKsB,EAAetB,EAAO,GAExE,MAAM,QAAN,OAAeA,EAAf,mBAA8B6B,EAA9B,cAAmDC,EAAnD,WAQKC,KAGH,sBAAK5B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR6B,GAAG,kBACH7B,UAAU,eACV8B,MAAOX,EACPY,SAAU,SAACC,GACTZ,GAAiBY,EAAMC,OAAOH,OAC9BhC,EAAQ,IAPZ,UAUE,wBAAQgC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBlC,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,eAAgBA,IAGlB,6BACGW,EACEyB,MAAMhB,EAAetB,EAAOsB,EAAcA,EAAetB,GACzDS,KAAI,SAAC8B,GACJ,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YExEvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c8d6e183.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ninterface Props {\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n  paginationList: number[];\n}\n\nexport const Pagination: React.FC<Props> = ({\n  page,\n  setPage,\n  paginationList,\n}) => {\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: page === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={page === 1}\n          onClick={() => {\n            if (page !== 1) {\n              setPage((currentPage) => currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {paginationList.map((number) => {\n        return (\n          <li\n            className={cn('page-item', {\n              active: page === number,\n            })}\n            key={number}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={() => {\n                if (page !== number) {\n                  setPage(number);\n                }\n              }}\n            >\n              {number}\n            </a>\n          </li>\n        );\n      })}\n      <li\n        className={cn('page-item', {\n          disabled: page === paginationList.length,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={page === paginationList.length}\n          onClick={() => {\n            if (page !== paginationList.length) {\n              setPage((currentPage) => currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const pagination = () => {\n    const pagin = [];\n\n    for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i += 1) {\n      pagin.push(i);\n    }\n\n    return pagin;\n  };\n\n  const paginationList = pagination();\n\n  const tile = () => {\n    const firstItemOnPage = itemsPerPage * page - itemsPerPage + 1;\n    const lastItemOnPage = itemsPerPage * page < 42 ? itemsPerPage * page : 42;\n\n    return `Page ${page} (items ${firstItemOnPage} - ${lastItemOnPage} of 42)`;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {tile()}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        page={page}\n        setPage={setPage}\n        paginationList={paginationList}\n      />\n\n      <ul>\n        {items\n          .slice(itemsPerPage * page - itemsPerPage, itemsPerPage * page)\n          .map((item) => {\n            return (\n              <li key={item} data-cy=\"item\">\n                {item}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}